---
import "@fontsource-variable/inter";
---

<script>
  import { extractColors } from "extract-colors";

  function secondsToPrettyTime(seconds: number) {
    return new Date(seconds * 1000)
      .toISOString()
      .substring(11, 19)
      .replace(/^00:/, "");
  }

  function mixColors(color1: string, color2: string, ratio: number) {
    var r1 = parseInt(color1.substring(1, 3), 16);
    var g1 = parseInt(color1.substring(3, 5), 16);
    var b1 = parseInt(color1.substring(5, 7), 16);
    var r2 = parseInt(color2.substring(1, 3), 16);
    var g2 = parseInt(color2.substring(3, 5), 16);
    var b2 = parseInt(color2.substring(5, 7), 16);
    var r = Math.round((r2 - r1) * ratio + r1);
    var g = Math.round((g2 - g1) * ratio + g1);
    var b = Math.round((b2 - b1) * ratio + b1);
    return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
  }

  let loc = window.location.href;
  let params = new URL(loc).searchParams;

  let cover = params.get("cover");
  let track = params.get("track");
  let artist = params.get("artist");
  let currentTheme = params.get("theme");
  let blurredBg = parseInt(params.get("blurbg"), 10) || 0;
  let timeCurrent = parseInt(params.get("timenow"), 10) || 0;
  let timeTotal = parseInt(params.get("timetotal"), 10) || 0;
  let scrobbles = parseInt(params.get("scrobbles"), 10) || 0;

  let coverDiv = document.getElementById("coverart");
  coverDiv.src = cover;

  if (blurredBg) {
    let coverDivBg = document.getElementById("bg-image");
    coverDivBg.style.backgroundImage = "url('" + cover + "')";
  } else {
    let coverDivBg = document.getElementById("bg-image");
    coverDivBg.style.filter = "initial";
  }

  let trackDiv = document.getElementById("trackname");
  trackDiv.innerText = track;

  let artistDiv = document.getElementById("artistname");
  artistDiv.innerText = artist;

  let timeCurrentTd = document.getElementById("time-current");
  timeCurrentTd.innerText = secondsToPrettyTime(timeCurrent);

  let timeTotalTd = document.getElementById("time-total");
  timeTotalTd.innerText = secondsToPrettyTime(timeTotal);

  let detailsTop = document.getElementById("details-top");

  let maxPercent;

  if (timeTotal) {
    maxPercent = 0.6;

    document.getElementById("lastfm").style.display = "none";

    let currentProgress = document.getElementById("progress-current");

    let percent = (timeCurrent * 100) / timeTotal;

    currentProgress.style.width = percent * 0.54 + "vw";
  } else if (scrobbles) {
    maxPercent = 0.6;

    document.getElementById("progress").style.display = "none";

    document.getElementById("scrobbles-count").innerText = scrobbles;

    if (scrobbles === 1) {
      document.getElementById("scrobbles-text").innerText = "scrobble";
    }
  } else {
    maxPercent = 0.8;

    document.getElementById("progress").style.display = "none";
    document.getElementById("lastfm").style.display = "none";
  }

  if (currentTheme === "light") {
    document.body.className = "light-mode";
  } else {
    document.body.className = "dark-mode";
  }

  let topStyle = document.defaultView.getComputedStyle(detailsTop);
  let artistStyle = document.defaultView.getComputedStyle(artistDiv);

  let trackNameFont = 15; // 15vw
  let artistNameFont = 6; // 6vw

  // Reducing font size until stuff gets in place.
  // artist font size is always reduced less than track name font size.
  window.addEventListener("load", () => {
    while (
      parseInt(topStyle.height, 10) + parseInt(artistStyle.height, 10) >
      window.outerWidth * 0.33 * maxPercent
    ) {
      // 60% or 80% of cover art size (33% of screen width)
      trackNameFont *= 0.995;
      artistNameFont *= 0.9985;

      trackDiv.style.fontSize = trackNameFont + "vw";
      artistDiv.style.fontSize = artistNameFont + "vw";
    }
  });

  coverDiv?.addEventListener("load", () =>
    extractColors(coverDiv, { crossOrigin: "anonymous" }).then((palette) => {
      let baseColorPrimary;
      let baseColorSecondary;

      const color = palette[0].hex;

      if (currentTheme === "light") {
        baseColorPrimary = "#000000";
        baseColorSecondary = "#ffffff";
      } else {
        baseColorPrimary = "#ffffff";
        baseColorSecondary = "#000000";
      }

      document.documentElement.style.setProperty("--bg-filter", color + "60");
      document.documentElement.style.setProperty(
        "--color-primary",
        mixColors(baseColorPrimary, color, 0.2),
      );
      document.documentElement.style.setProperty(
        "--color-secondary",
        mixColors(baseColorSecondary, color, 0.2),
      );
      document.documentElement.style.setProperty(
        "--color-progress",
        mixColors(baseColorPrimary, color, 0.2) + "4d",
      );
    }),
  );
</script>

<html lang="en">
  <head>
    <title>DOM Image</title>
  </head>

  <body>
    <div id="main" class="main-content">
      <div id="cover-div">
        <img id="coverart" />
      </div>
      <div id="details-div">
        <div id="details-top">
          <span id="trackname"></span>
        </div>
        <div id="details-middle">
          <span id="artistname"></span>
        </div>
        <div id="details-bottom">
          <div id="progress">
            <div id="progress-total">
              <div id="progress-current" class="box-content"></div>
            </div>
            <div id="time-div">
              <span id="time-current"></span>
              <span id="time-total"></span>
            </div>
          </div>
          <div id="lastfm">
            <span id="scrobbles-count"></span>
            <span id="scrobbles-text">scrobbles</span>
          </div>
        </div>
      </div>
    </div>
    <div id="bg-image"></div>
  </body>
</html>

<style>
  .light-mode {
    --filter-brightness: 1.5;
    --base-color-secondary: #fff;
    --mix-blend-mode: darken;
  }

  .dark-mode {
    --filter-brightness: 0.5;
    --base-color-secondary: #000;
    --mix-blend-mode: lighten;
  }

  body {
    font-family: "Inter", sans-serif;
    margin: 0;
    overflow: hidden;
    height: 100vh;
    color: var(--color-primary);
    background-color: var(--color-secondary);
  }

  img#coverart {
    width: 33vw;
    border-radius: 5%;
    box-shadow: 0 0 5vw rgba(0, 0, 0, 0.2);
  }

  div#details-div {
    width: 54vw;
  }

  span#trackname {
    margin-bottom: 1vw;
    word-break: break-word;
    display: block;
    font-size: 15vw;
  }

  span#artistname {
    display: block;
    font-size: 6vw;
  }

  div#lastfm {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-top: 2vw;
  }

  span#scrobbles-count {
    font-size: 5.5vw;
    margin-right: 2vw;
    background-color: var(--color-primary);
    color: var(--base-color-secondary);
    mix-blend-mode: var(--mix-blend-mode);
    padding: 0 2.5vw;
    border-radius: 6vw;
  }

  span#scrobbles-text {
    font-size: 5vw;
  }

  div#progress-total {
    background-color: var(--color-progress);
    width: inherit;
    height: 3.5vw;
    border-radius: 3.5vw;
    margin-top: 1vw;
    margin-bottom: 1vw;
    overflow: hidden;
  }

  div#progress-current {
    position: relative;
    background-color: var(--color-primary);
    height: inherit;
    padding-left: 3.5vw;
    right: 3.5vw;
    border-radius: inherit;
  }

  .main-content {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    gap: 5vw;
  }

  #time-current {
    margin-right: auto;
    padding-left: 6px;
  }

  #time-total {
    padding-right: 6px;
  }

  #time-div {
    display: flex;
    font-size: 3vw;
  }

  #bg-image {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    background-color: var(--color-secondary);
    filter: blur(7vw) brightness(var(--filter-brightness));
    position: absolute;
    height: 100vh;
    width: 100vw;
    top: 0;
    transform: scale(1.3);
    z-index: -100;
  }

  #bg-image::before {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    filter: grayscale(0.3);
    background-color: var(--bg-filter);
  }
</style>
